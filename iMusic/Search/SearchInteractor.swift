//
//  SearchInteractor.swift
//  iMusic
//
//  Created by CodergirlTM on 18.01.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchBusinessLogic
{
    func doSomething(request: Search.Something.Request.RequestType)
}

protocol SearchDataStore
{
  //var name: String { get set }
}

class SearchInteractor: SearchBusinessLogic, SearchDataStore {

    var networkService = NetworkService()
  var presenter: SearchPresentationLogic?
  var worker: SearchWorker?
  //var name: String = ""
  
  // MARK: Do something
  
  func doSomething(request: Search.Something.Request.RequestType)
  {
    worker = SearchWorker()
    worker?.doSomeWork()
      if worker == nil {
          worker = SearchWorker()
      }
      switch request {
      case .some:
          print("interactor .some")
          presenter?.presentSomething(response: Search.Something.Response.ResponseType.some)
      case .getTracks(let searchText):
          print("interactor .getTracks")
          presenter?.presentSomething(response: Search.Something.Response.ResponseType.presentFooterView)
          networkService.fetchTracks(searchText: searchText) { [weak self](searchResponse) in
              self?.presenter?.presentSomething(response: Search.Something.Response.ResponseType.presentTracks(searchResponse: searchResponse!))
          }
      }
  }
//
//    func makeRequest(request: Search.Something.Request.RequestType) {
//        if worker == nil {
//            worker = SearchWorker()
//        }
//        switch request {
//        case .some:
//            print("interactor .some")
//        case .getTracks:
//            print("interactor .getTracks")
//            presenter?.presentSomething(response: Search.Something.Response.ResponseType.presentTracks)
//        }
//    }
    
    
}
