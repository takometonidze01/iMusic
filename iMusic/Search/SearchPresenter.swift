//
//  SearchPresenter.swift
//  iMusic
//
//  Created by CodergirlTM on 18.01.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchPresentationLogic
{
    func presentSomething(response: Search.Something.Response.ResponseType)
}

class SearchPresenter: SearchPresentationLogic
{
  weak var viewController: SearchDisplayLogic?
  
  // MARK: Do something
  
    func presentSomething(response: Search.Something.Response.ResponseType)
  {
      switch response {
      case .some:
          print("presenter .some")
      case .presentTracks(let searchResults):
          let cells = searchResults.results.map({ (track) in
              cellViewModel(from: track)
          }) ?? []
          print("presenter .presentTracks")
          let searchViewModel = SearchViewModel.init(cells: cells)
          viewController?.displaySomething(viewModel: Search.Something.ViewModel.ViewModelData.displayTracks(searchViewModel: searchViewModel))
      case .presentFooterView:
          viewController?.displaySomething(viewModel: Search.Something.ViewModel.ViewModelData.displayFooterView)
      }
  }
    
    private func cellViewModel(from track: Track) -> SearchViewModel.Cell {
        return SearchViewModel.Cell.init(iconUrlString: track.artworkUrl100,
                                         trackName: track.trackName ?? "",
                                         collectionName: track.collectionName ?? "",
                                         artistName: track.artistName ?? "",
                                         previewUrl: track.previewUrl)
    }
    

}
